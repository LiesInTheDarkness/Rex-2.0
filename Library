local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local Library = {}

function Library:CreateWindow(Title)
    local GUI = Instance.new("ScreenGui")
    local MainUI = Instance.new("Frame")
    local TitleBar = Instance.new("Frame")
    local TitleLabel = Instance.new("TextLabel")
    local FloatingButton = Instance.new("TextButton")
    local TabHolder = Instance.new("Frame")
    local ContentFrame = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")

    GUI.Parent = game.CoreGui
    GUI.Name = "CustomUI"

    -- Main UI Panel (Centered on spawn)
    MainUI.Parent = GUI
    MainUI.Size = UDim2.new(0, 450, 0, 300)
    MainUI.Position = UDim2.new(0.5, -225, 0.5, -150)
    MainUI.BackgroundTransparency = 0.1
    MainUI.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainUI.BorderSizePixel = 0
    MainUI.Visible = false

    local UICorner = Instance.new("UICorner", MainUI)
    UICorner.CornerRadius = UDim.new(0.2, 0)

    -- Title Bar
    TitleBar.Parent = MainUI
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.BackgroundTransparency = 0.2
    TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)

    local TitleCorner = Instance.new("UICorner", TitleBar)
    TitleCorner.CornerRadius = UDim.new(0.2, 0)

    -- Title Label
    TitleLabel.Parent = TitleBar
    TitleLabel.Size = UDim2.new(1, 0, 1, 0)
    TitleLabel.Text = Title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextSize = 18
    TitleLabel.BackgroundTransparency = 1

    -- Floating Button (Under Roblox Logo)
    FloatingButton.Parent = GUI
    FloatingButton.Size = UDim2.new(0, 50, 0, 50)
    FloatingButton.Position = UDim2.new(0, 10, 0, 10)  -- Adjusted to be under the logo
    FloatingButton.BackgroundTransparency = 0.3
    FloatingButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    FloatingButton.Text = "â˜°"
    FloatingButton.TextSize = 22
    FloatingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    FloatingButton.BorderSizePixel = 0

    local ButtonCorner = Instance.new("UICorner", FloatingButton)
    ButtonCorner.CornerRadius = UDim.new(1, 0)

    -- Tab Holder
    TabHolder.Parent = MainUI
    TabHolder.Size = UDim2.new(1, 0, 0, 40)
    TabHolder.Position = UDim2.new(0, 0, 0, 40)
    TabHolder.BackgroundTransparency = 0.3
    TabHolder.BackgroundColor3 = Color3.fromRGB(25, 25, 25)

    UIListLayout.Parent = TabHolder
    UIListLayout.FillDirection = Enum.FillDirection.Horizontal
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.Padding = UDim.new(0, 5)

    -- Content Frame
    ContentFrame.Parent = MainUI
    ContentFrame.Size = UDim2.new(1, 0, 1, -80)
    ContentFrame.Position = UDim2.new(0, 0, 0, 80)
    ContentFrame.BackgroundTransparency = 1

    local Tabs = {}

    function Library:CreateTab(Name)
        local TabButton = Instance.new("TextButton")
        TabButton.Parent = TabHolder
        TabButton.Size = UDim2.new(0, 100, 0, 30)
        TabButton.BackgroundTransparency = 0.3
        TabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        TabButton.Text = Name
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.TextSize = 16

        local TabFrame = Instance.new("Frame")
        TabFrame.Parent = ContentFrame
        TabFrame.Size = UDim2.new(1, 0, 1, 0)
        TabFrame.BackgroundTransparency = 1
        TabFrame.Visible = #Tabs == 0

        Tabs[#Tabs + 1] = {Button = TabButton, Frame = TabFrame}

        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Tabs) do
                tab.Frame.Visible = false
            end
            TabFrame.Visible = true
        end)

        return TabFrame
    end

    function Library:CreateButton(Parent, Text, Callback)
        local Button = Instance.new("TextButton")
        Button.Parent = Parent
        Button.Size = UDim2.new(0.8, 0, 0, 40)
        Button.Position = UDim2.new(0.1, 0, 0.1, 0)
        Button.BackgroundTransparency = 0.3
        Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        Button.Text = Text
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.TextSize = 18

        Button.MouseButton1Click:Connect(Callback)

        return Button
    end

    function Library:CreateSlider(Parent, Min, Max, Default, Callback)
        local Slider = Instance.new("Frame", Parent)
        Slider.Size = UDim2.new(0.8, 0, 0, 40)
        Slider.Position = UDim2.new(0.1, 0, 0.2, 0)
        Slider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

        local SliderBar = Instance.new("Frame", Slider)
        SliderBar.Size = UDim2.new(0.9, 0, 0.2, 0)
        SliderBar.Position = UDim2.new(0.05, 0, 0.4, 0)
        SliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

        local SliderButton = Instance.new("TextButton", Slider)
        SliderButton.Size = UDim2.new(0, 15, 0, 20)
        SliderButton.Position = UDim2.new((Default - Min) / (Max - Min), -7, 0.15, 0)
        SliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        SliderButton.Text = ""

        local Dragging = false
        SliderButton.MouseButton1Down:Connect(function()
            Dragging = true
        end)

        UserInputService.InputChanged:Connect(function(input)
            if Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local pos = math.clamp((input.Position.X - Slider.AbsolutePosition.X) / Slider.AbsoluteSize.X, 0, 1)
                SliderButton.Position = UDim2.new(pos, -7, 0.15, 0)
                Callback(math.floor(Min + (Max - Min) * pos))
            end
        end)

        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                Dragging = false
            end
        end)

        return Slider
    end

    FloatingButton.MouseButton1Click:Connect(function()
        MainUI.Visible = not MainUI.Visible
        TweenService:Create(MainUI, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = MainUI.Visible and 0.1 or 1}):Play()
    end)

    return Library
end

return Library
